
import { createClient } from '@supabase/supabase-js'
import type { Tenant } from './types';

// The 'Database' type is generated by Supabase CLI.
// We are defining a partial type here manually to make progress.
// TODO: Replace with `import { Database } from './database.types';`
export type Database = {
  public: {
    Tables: {
      tenants: {
        Row: Tenant;
        Insert: Omit<Tenant, 'id' | 'createdAt'>;
        Update: Partial<Omit<Tenant, 'id' | 'createdAt'>>;
      }
    }
    Functions: {}
    Enums: {}
  }
}

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY

if (!supabaseUrl || !supabaseAnonKey) {
  // A console.error is more appropriate here than throwing an error,
  // as the app can still function in a limited capacity without Supabase.
  console.error('Supabase URL and/or Anon Key are not defined in .env. The app will run in offline-only mode.')
}

export const supabase = supabaseUrl && supabaseAnonKey ? createClient<Database>(supabaseUrl, supabaseAnonKey) : null;
